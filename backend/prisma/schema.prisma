// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Pesquisador{
  cpf String @id
  nome String
  instituicao String
  dataDeNascimento DateTime
  genero String
  created_At DateTime @default(now())
  updated_at DateTime @updatedAt

  inserir_Dados CondicaoClimatica[] @relation("inserirDados")

  @@map("Pesquisador")
}

model Localizacao{
  latitude Float
  longitude Float
  nome String 

  referenciar_local CondicaoClimatica[] @relation("referenciarLocalizacao")
  @@id([latitude, longitude])
  @@map("Localizacao")
}

model CondicaoClimatica{
  id String @id @default(uuid())
  latitude Float
  longitude Float
  tempo String
  descricaoTempo String
  temperatura Float ///sempre em celsius
  sensacaoTermica Float ///sempre em celsius
  temperaturaMaxima Float
  temperaturaMinima Float
  pressaoDoAr Float
  umidade Float
  visibilidade Float
  ventoVelocidade Float
  ventoDirecao Float ///em graus, sendo poss√≠vel abstrair para siglas conforme o grau
  nuvens Float
  nascerDoSol DateTime
  porDoSol DateTime
  dataDeColeta DateTime
  created_At DateTime @default(now())
  updated_at DateTime @updatedAt

  pesquisador Pesquisador @relation("inserirDados", fields: [cpfPesquisador], references: [cpf])
  cpfPesquisador String


  localizacao Localizacao @relation("referenciarLocalizacao", fields: [latitude, longitude], references: [latitude,longitude])
  
  @@map("CondicaoClimatica")
}

